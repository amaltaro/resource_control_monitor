[tool.poetry]
name = "wm-resource-monitor"
version = "1.0.0"
description = "Workload Management Resource Control Monitor"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
flask = "^3.0.0"
flask-compress = "^1.14"
prometheus-flask-exporter = "^0.22.3"
gunicorn = "^21.2.0"
cryptography = "^41.0.7"
werkzeug = "^3.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^23.7.0"
ruff = "^0.3.0"
mypy = "^1.5.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
strict = true

[tool.ruff]
# Same as Black.
line-length = 88
target-version = ["py311", "py312"]

# Enable all rules by default, then configure specific rules below
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "dist",
    "node_modules",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
known-first-party = ["app"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]