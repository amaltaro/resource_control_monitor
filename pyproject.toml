[project]
name = "wm-resource-control"
version = "0.1.0"
description = "Workload Management Resource Control Manager"
requires-python = ">=3.11"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]

[tool.poetry]
name = "wm_resource_control"
version = "0.2.1"
description = "Resource Control API for Workflow Manager"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "wm_resource_control"}]

[tool.poetry.dependencies]
python = "^3.11"
flask = "^3.0.0"
flask-compress = "^1.14"
prometheus-flask-exporter = "^0.22.3"
gunicorn = "^21.2.0"
cryptography = "^41.0.7"
werkzeug = "^3.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.11.0"
ruff = "^0.3.0"
mypy = "^1.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.mypy]
python_version = "3.11"
strict = true

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
# Enable all rules by default, then configure specific rules below
select = ["E", "F", "B", "I", "N", "UP", "PL", "RUF"]
ignore = ["I001", "RUF010", "E501"]  # Add these rules to ignore

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "dist",
    "node_modules",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Unlike Flake8, default to a complexity level of 10.
mccabe = { max-complexity = 10 }

per-file-ignores = { "__init__.py" = ["F401"] }

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["*_t.py"]
addopts = "-v --cov=wm_resource_control --cov-report=term-missing"